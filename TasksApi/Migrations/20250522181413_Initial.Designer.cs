// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TasksApi.DbContexts;

#nullable disable

namespace TasksApi.Migrations
{
    [DbContext(typeof(MojTasksContext))]
    [Migration("20250522181413_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("TasksApi.Entities.MojTask", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("TaskDescription")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("TaskDueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("TaskStatus")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TaskId");

                    b.ToTable("MojTasks");

                    b.HasData(
                        new
                        {
                            TaskId = 1,
                            TaskDescription = "First Task",
                            TaskDueDate = new DateOnly(2025, 5, 9),
                            TaskStatus = "Started"
                        },
                        new
                        {
                            TaskId = 2,
                            TaskDescription = "Second Task",
                            TaskDueDate = new DateOnly(2025, 4, 10),
                            TaskStatus = "Waiting"
                        },
                        new
                        {
                            TaskId = 3,
                            TaskDescription = "Third Task",
                            TaskDueDate = new DateOnly(2025, 3, 11),
                            TaskStatus = "Blocked"
                        },
                        new
                        {
                            TaskId = 4,
                            TaskDescription = "Fourth Task",
                            TaskDueDate = new DateOnly(2025, 2, 12),
                            TaskStatus = "Finished"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
